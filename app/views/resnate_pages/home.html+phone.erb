<% if current_user.nil? %>
	<div id="Welcome">
	<h2 id="bigResnate">Resnate.</h2>
      <h3>The social network<br>for people who love music.</h3>

      <div id="Welcome2">
        <%= link_to image_tag("ResnateCropped.png", id: 'rsCrop'), "/auth/facebook" %>
      
        <div id="signIn"><%= link_to simple_format("Sign in with Facebook<br />Follow your Friends"), "/auth/facebook", id: "sign_in" %></div>
        <h4 id="homeFooter">Built using YouTube + Songkick + Amazon<br>+ Setlist.fm APIs. </h4>
      </div>
     </div>
<% else %>
	<div class="mobileHeader">
		<div class="mobileHeaderDiv" id="mobileProfile">
			<%= image_tag "https://graph.facebook.com/#{current_user.uid}/picture?width=100&height=100", id: "mobileHomePic" %>
			<div id="mobileHeaderPoints"><%= current_user.points %></div>
			<span class="glyphicon glyphicon-bell" aria-hidden="true"></span>
		</div>
		<div class="mobileHeaderDiv" id="mobileHome">
			<span class="glyphicon glyphicon-home" aria-hidden="true"></span>Home
		</div>
		<div class="mobileHeaderDiv" id="mobileInbox">
			<span class="glyphicon glyphicon-envelope" aria-hidden="true"></span>Messages
		</div>
		<div class="mobileHeaderDiv" id="mobileArtists">
			<span class="glyphicon glyphicon-music" aria-hidden="true"></span> Artists
		</div>
		<div class="mobileHeaderDiv" id="mobilePeople">
			<span class="glyphicon glyphicon-user" aria-hidden="true"></span> People
		</div>
	</div>
	<div id="mobileMainBody">
		
	</div>
	<div id="footerPlayer">
  <iframe id="player" frameborder="0" title="YouTube video player"type="text/html"src="https://www.youtube.com/embed/tza3RLAfGzo?html5=1&enablejsapi=1&rel=0&showinfo=0&controls=0&iv_load_policy=3" webkitallowfullscreen mozallowfullscreen allowfullscreen name="player" webkit-playsinline></iframe>
  <div id="navNslider">
    <div id="navTitle"></div>
    <div id="navButtons"></div>
    
    <div id="slider"></div>
    <div id="currentTime"></div>
    <span class="glyphicon glyphicon-fullscreen"></span>
    <div id="duration"></div>
  </div> 

	<script type="text/javascript">

 	  function getFrameID(id){
    var elem = document.getElementById(id);
    if (elem) {
        if(/^iframe$/i.test(elem.tagName)) return id; //Frame, OK
        // else: Look for frame
        var elems = elem.getElementsByTagName("iframe");
        if (!elems.length) return null; //No iframe found, FAILURE
        for (var i=0; i<elems.length; i++) {
           if (/^https?:\/\/(?:www\.)?youtube(?:-nocookie)?\.com(\/|$)/i.test(elems[i].src)) break;
        }
        elem = elems[i]; //The only, or the best iFrame
        if (elem.id) return elem.id; //Existing ID, return it
        // else: Create a new ID
        do { //Keep postfixing `-frame` until the ID is unique
            id += "-frame";
        } while (document.getElementById(id));
        elem.id = id;
        return id;
    }
    // If no element, return null.
    return null;
}

// Define YT_ready function.
var YT_ready = (function() {
    var onReady_funcs = [], api_isReady = false;
    /* @param func function     Function to execute on ready
     * @param func Boolean      If true, all qeued functions are executed
     * @param b_before Boolean  If true, the func will added to the first
                                 position in the queue*/
    return function(func, b_before) {
        if (func === true) {
            api_isReady = true;
            while (onReady_funcs.length) {
                // Removes the first func from the array, and execute func
                onReady_funcs.shift()();
            }
        } else if (typeof func == "function") {
            if (api_isReady) func();
            else onReady_funcs[b_before?"unshift":"push"](func); 
        }
    }
})();
// This function will be called when the API is fully loaded
function onYouTubeIframeAPIReady() {YT_ready(true)}

// Load YouTube Frame API
(function() { // Closure, to not leak to the scope
  var s = document.createElement("script");
  s.src = (location.protocol == 'https:' ? 'https' : 'http') + "://www.youtube.com/iframe_api";
  var before = document.getElementsByTagName("script")[0];
  before.parentNode.insertBefore(s, before);
})();
var player; 
YT_ready(function(){
    var frameID = getFrameID("player");
    if (frameID) { //If the frame exists
        player = new YT.Player(frameID, {
            events: {
              'onReady': onPlayerReady,
              'onStateChange': stopCycle
            }
        });


        
    }
});

 var playerReady = false;
        function onPlayerReady(event) {
            playerReady = true;
            var $ = document.querySelector.bind(document);
            iframe = $('#player');
            $('.glyphicon-fullscreen').addEventListener('click', playFullscreen);
            function playFullscreen() {
  var requestFullScreen = iframe.requestFullScreen || iframe.mozRequestFullScreen || iframe.webkitRequestFullScreen;
  if (requestFullScreen) {
    requestFullScreen.bind(iframe)();
  }
  
}

        }


        function toHHMMSS(unformat){
          var sec_num = unformat;

          if(sec_num / 3600 <= 1) {
            var minutes = Math.floor(sec_num / 60);
    var seconds = Math.round(sec_num - (minutes * 60));

    if (minutes < 10) {minutes = "0"+minutes;}
    if (seconds < 10) {seconds = "0"+seconds;}
    var time    = minutes+':'+seconds;
  } else {
          var hours   = Math.floor(sec_num / 3600);
    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
    var seconds = Math.round(sec_num - (hours * 3600) - (minutes * 60));

    if (hours   < 10) {hours   = "0"+hours;}
    if (minutes < 10) {minutes = "0"+minutes;}
    if (seconds < 10) {seconds = "0"+seconds;}
    var time    = hours+':'+minutes+':'+seconds;
  }
    return time;

        }

function stopCycle(event) {

  duration = player.getDuration();
  $('#duration').html(toHHMMSS(duration));
        totalBytes = player.getVideoBytesTotal();

        $("#slider").slider({
        range: "max",
        min: 0,
        max: duration,
        value: 1,
        slide: function( event, ui ) {player.seekTo(ui.value);}
    });

        function loop() {
        var time = player.getCurrentTime(),
            // make loaded a percentage
            loaded = 100 - (player.getVideoBytesLoaded() / totalBytes) * 100;
$('#currentTime').html(toHHMMSS(time));
        // set limit - no one likes negative widths
        if (loaded < 0) { loaded = 0; }

        // update time on slider
        $('#slider')
            .slider('option', 'value', time)
            .find('.ui-widget-header').css('width', loaded + '%');

        // repeat loop as needed
        if (loaded < 0 || time < duration) {
            setTimeout(loop, 500);
        }
    }
    loop(); 


          if (event.data == YT.PlayerState.ENDED) {
               var url = event.target.getVideoUrl();
               var match = url.match(/[?&]v=([^&]+)/);
               var videoId = match[1];
               $('#stopID').html(videoId);
               
                if($('#stopID').html() == videoID){
                  var thisVideo = $('#Playlist').find('li img[src="https://img.youtube.com/vi/'+videoID+'/default.jpg"]');
                  nextVideo = $(thisVideo).parent().next().find('.playlistYT');
                  nextVideo.click();
                }
               

          }

          else if (event.data == YT.PlayerState.PAUSED) {
            
            $('.glyphicon-pause').parent().css('display', 'none');
            $('.glyphicon-play').parent().css('display', 'inline-block');
          }

          else if (event.data == YT.PlayerState.PLAYING) {
            
            $('.glyphicon-play').parent().css('display', 'none');
            $('.glyphicon-pause').parent().css('display', 'inline-block');
          }
      }


$(function(){

	$.get('/indexHeader', function(result){
		$('#mobileMainBody').html(result);
		$.get('/activities', function(result){
			$('#mobileMainBody').append(result);
		});
	});
	
});

$(document).on('focus', 'textarea', function() {
    this.scrollIntoView();
});

$('.mobileHeaderDiv').click(function(){
	$('.mobileHeaderDiv').css('color', 'white');
	$(this).css('color', '#E50049');
});

function getProfile(){
	$.get('/<%=current_user.id %>/profile', function(result){
		$('#mobileMainBody').html(result);
		$('#mobileMainBody').css('overflow', 'hidden');
		$('#mobileMainBody').scrollTop(0);
		$('#mobileMainBody').css('overflow', 'scroll');
	});
}

$('#mobileProfile').click(function(){
	getProfile();
});

$('#mobileHome').click(function(){
	$.get('/indexHeader', function(result){
		$('#mobileMainBody').html(result);
		$.get('/activities', function(result){
			$('#mobileMainBody').append(result);
		});
	});
});

$('#mobilePeople').click(function(){
	$.get('/peopleHeader', function(result){
		$('#mobileMainBody').html(result);
	$.get('/leaderboard', function(result){
		$('#mobileMainBody').append(result);
		$('#mobileMainBody').scrollTop(0);
		});
	});
});


$('#mobileArtists').click(function(){
	$.get('/artistSearch', function(result){
		$('#mobileMainBody').html(result);
	});
});

$('#mobileInbox').click(function(){
	$.get('/test', function(result){
		$('#mobileMainBody').html(result);
	});
});

$(document).on('click', '#writeGig, #pastGigs', function(){
  $.get("<%= current_user.id %>/pastGigs", function(result){
  	$('#mobileMainBody').html(result);
  });
 });

$('body').on('click', '.profileName, .profileImg, .profileNameMsg, .profileFollowName, .feedPic, .reviewerPic, .feedFollowPic, .playlistCreatorFeed, .followNames, .followImgs, .userImg, .playlistCreatorName, .friendsWhoLikeImgs, .commenterName', function(){
    
  $.get($(this).siblings('.hiddenID').html() + '/profile', function(result){
  $('#mobileMainBody').html(result);
  $('#mobileMainBody').scrollTop(0);
});
  });

$(document).on('click', '.deleteReviewYes', function(){
  var reviewURL = '/reviews/' + $(this).siblings('.hiddenReviewID').html().trim();
  $.ajax({
            url: reviewURL ,
            type: 'DELETE'
          });
  getProfile();
});

$('#mobileMainBody').on('scroll', function(){
    if($('.infinite-scrolling .pagination .next').length){
      if(!$('.next').hasClass('disabled')) {
        url = $('.infinite-scrolling .next').find('a').attr('href');
        if($('#mobileMainBody').scrollTop() + $('#mobileMainBody').innerHeight()>=$('#mobileMainBody')[0].scrollHeight - 200){
      
          $('.infinite-scrolling').remove();
          $.get(url, function(response){
                $('#mobileMainBody').append(response); 
                     });
        }    
      }
          
    } 
  });

</script>
<% end %>