<div class="bigPlaylistHeader">
<% unless @playlist.content.nil? %>
	<% JSON.parse(@playlist.content).first.each do |k, v| %>
		<img class="bigPlaylistPic" src="https://img.youtube.com/vi/<%= v %>/hqdefault.jpg"></img>
	<% end %>
<% end %>

<div class="bigPlaylistInfo">
	<h1 class="bigPlaylistName"><%= @playlist.name %></h1>
	<% if current_user.id == @playlist.user_id %>
		<div class="bigEditPlaylist editDeleteBkgd">Edit</div>
		<div class="bigSavePlaylist editDeleteBkgd">Save</div>
		<div class="cancelEditingPlaylist editDeleteBkgd">Cancel</div>
		<div class="bigDeletePlaylist editDeleteBkgd">Delete</div>
		<div class="deletePlaylistPrompt">Are you sure you want to delete this playlist?</div>
		<div class="deletePlaylistYes editDeleteBkgd">Yes</div>
		<div class="deletePlaylistNo editDeleteBkgd">No</div>
		<div class="hiddenPlaylistID"><%= @playlist.id %></div>
	<% else %>
		<% if current_user.follows?(@playlist) %>
      		<%= button_to "Unfollow", unfollow_path(playlist: @playlist.id) , remote: true, method: :post , class: "bigPlaylistUnfollow", style: "display: block" %>
      		<%= button_to "Follow", follow_path(playlist: @playlist.id) , remote: true, method: :post , class: "bigPlaylistFollow", style: "display: none" %>
    	<% else %>
        	<%= button_to "Follow", follow_path(playlist: @playlist.id) , remote: true, method: :post , class: "bigPlaylistFollow", style: "display: block" %>
        	<%= button_to "Unfollow", unfollow_path(playlist: @playlist.id) , remote: true, method: :post , class: "bigPlaylistUnfollow", style: "display: none" %>
    	<% end %>
	<% end %>
	<div class="description">
		<% if @playlist.description.nil? && @playlist.user_id == current_user.id %>
			<textarea class="descriptTxt" placeholder="Write about this playlist!"></textarea>
		<% else %>
			<%= simple_format(@playlist.description, class: "descriptP") %>
		<% end %>
	</div>

	<% if @playlist.followers(User).count > 0 %>
		<div class="bigPlaylistFollowers">
		<% @playlist.followers(User).take(10).each do |follower| %>
			<img src="https://graph.facebook.com/<%= follower.uid %>/picture?width=100&height=100" class="userImg" title="<%= follower.name %>"></img><div class="hiddenID"><%= follower.id %></div>
		<% end %>
		<% if @playlist.followers(User).count == 1 %>
			<span class="followersOpener" ><%= @playlist.followers(User).count %> follower<div class="hiddenPlaylistID"><%= @playlist.id %></div></span>
		<% else %>
			<span class="followersOpener"><%= @playlist.followers(User).count %> followers<div class="hiddenPlaylistID"><%= @playlist.id %></div></span>
		<% end %>
		</div>
	<% end %>
</div>
</div>

<div class="hiddenPlaylistID"><%= @playlist.id %></div>
<div class="bigPlaylistTracks">
<% unless @playlist.content.nil? %>
	<% JSON.parse(@playlist.content).each do |p| %>
		<% p.each do |k, v| %>
			<li class="playlistSong playlistSongLi">

				<img class="playlistYT playlistSong" src="https://img.youtube.com/vi/<%= v %>/default.jpg"></img>
				<% if @playlist.user_id == current_user.id %>
					<span class="glyphicon glyphicon-remove"></span>
				<% end %>
				<p class="playlistSongP"><%= k %></p>

			</li>
		<% end %>
	<% end %>
<% end %>
</div>

<script type="text/javascript">

	$(".playlistSongLi").click(function(){

        
        videoID = $(this).find('img').attr("src").slice(27,38);
        
        <%= render "layouts/videoClick" %>

      });

	var playlistID = $('.bigPlaylistInfo .hiddenPlaylistID').html();

	$('.bigEditPlaylist').click(function(){
    	
    	if($('.descriptP').length > 0) {
    		$('.descriptP').replaceWith('<textarea class="descriptTxt" placeholder="Write about this playlist!">'+$('.descriptP').html()+'</textarea>');
    	}
    	$('.bigPlaylistName').replaceWith('<textarea class="editPlaylistName">'+$('.bigPlaylistName').html()+'</textarea>');
    	$('.bigEditPlaylist').hide();
      	$('.bigEditPlaylist').siblings('.bigSavePlaylist, .cancelEditingPlaylist').css('display', 'inline-block');
	});

	$('.cancelEditingPlaylist').click(function(){
    $.getJSON('/playlists/' + playlistID + '.json', function(data){
    	var name = data["name"]
    	var description = data["description"]
      	$('.editPlaylistName').replaceWith('<h1 class="bigPlaylistName">' + name + '</h1>');
      	if(description.length > 0) {
      		$('.descriptTxt').replaceWith('<p class="descriptP">' + description + '</p>');
      	}
      	$('.bigEditPlaylist').css('display', 'inline-block');
      	$('.cancelEditingPlaylist, .bigSavePlaylist').hide();
    });
  });

	$(".bigSavePlaylist").click(function(event){
    var reviewContent = $(this).siblings('.updateReview')
    var updateURL = "/playlists/" + playlistID;
    var descriptionText = ""
    var nameText = ""
    if($('.descriptP').length > 0) {
    		descriptionText = $('.descriptP').html();
    	} else {
    		descriptionText = $('.descriptTxt').val();
    	}

    	if($('.bigPlaylistName').length > 0) {
    		nameText = $('.bigPlaylistName').html();
    	} else {
    		nameText = $('.editPlaylistName').val();
    	}

    	if(descriptionText.length > 0 && nameText.length > 0) {
    		$.ajax({
      			url: updateURL,
      			method: "PUT",
      			data: { description : descriptionText, name: nameText }
    		});
    	} else if (nameText.length > 0) {
    		$.ajax({
      			url: updateURL,
      			method: "PUT",
      			data: { name: nameText }
    		});
    	}

    	
    	if ($('.descriptTxt').length > 0) {
    		$('.descriptTxt').replaceWith('<p class="descriptP">' + $('.descriptTxt').val() + '</p>');
    	}

    	if($('.editPlaylistName').length > 0) {
    		$('.editPlaylistName').replaceWith('<h1 class="bigPlaylistName">' + $('.editPlaylistName').val() + '</h1>');
    	}
      
    $(this).css('display', 'none');
    $(this).siblings('.cancelEditingPlaylist').css('display', 'none');
    $(this).siblings('.bigEditPlaylist').css('display', 'inline-block');
  });


	$('.bigDeletePlaylist').click(function(){
    $(this).siblings('.deletePlaylistPrompt, .deletePlaylistYes, .deletePlaylistNo').addClass('inlinePrompt');
  });

$('.deletePlaylistNo').click(function(){
  $(this).siblings('.deletePlaylistPrompt, .deletePlaylistYes').removeClass('inlinePrompt');
  $(this).removeClass('inlinePrompt');
});

$('.deletePlaylistYes').click(function(){
  var playlistURL = '/playlists/' + $(this).siblings('.hiddenPlaylistID').html().trim();
  $.ajax({
            url: playlistURL ,
            type: 'DELETE'
          });
  profile();
    $('.modal').modal('hide');
});

	$('.bigPlaylistTracks .glyphicon-remove').click(function(){
    var updatePlaylistURL = '/playlists/' + $(this).parents('.bigPlaylistTracks').siblings('.hiddenPlaylistID').html();
    var playlistContent = [];
      $(this).parents('.bigPlaylistTracks').children('li').not($(this).parent()).each(function(){
        name = $(this).find('p').text().trim();
        value = $(this).find('img').attr('src').slice(27,-12);
        var playlistObject = {};
        playlistObject[name] = value;
        playlistContent.push(playlistObject);
      });
    $.ajax({
   url: updatePlaylistURL ,
   type: 'PUT',
   data: {content: JSON.stringify(playlistContent)},
   success: function(response) {
     //...
   }
});
    $(this).parent().remove();
  });

	$(".bigPlaylistTracks").droppable({ 
  		accept: ".videoResultsDivLi", 
  		zIndex: 1,
  		drop: songDroppable
	});




	$(".bigPlaylistTracks").sortable({
    containment: '.bigPlaylistTracks',
sort: function(event, ui) {
  $(ui.helper).removeClass('videoResultsDivLi');
  $(ui.helper).addClass('playlistSong playlistSongLi noclick');
    },
    stop: function(){
    var updatePlaylistURL = '/playlists/' + $(this).siblings('.hiddenPlaylistID').html();
    var playlistContent = [];
      $(this).children('li').each(function(){
        name = $(this).find('p').text().trim();
        value = $(this).find('img').attr('src').slice(27,-12);
        var playlistObject = {};
        playlistObject[name] = value;
        playlistContent.push(playlistObject);
      });
    $.ajax({
   url: updatePlaylistURL ,
   type: 'PUT',
   data: {content: JSON.stringify(playlistContent)},
   success: function(response) {
   }
});
    },
    receive: function(event, ui){

      var updatePlaylistURL = '/playlists/' + $(this).siblings('.hiddenPlaylistID').html();
    var playlistContent = [];
      $(this).children('li').each(function(){
        name = $(this).find('p').text().trim();
        value = $(this).find('img').attr('src').slice(27,-12);
        var playlistObject = {};
        playlistObject[name] = value;
        playlistContent.push(playlistObject);
      });
    $.ajax({
   url: updatePlaylistURL ,
   type: 'PUT',
   data: {content: JSON.stringify(playlistContent)},
   success: function(response) {
   }
});
    }
    });

	$('.bigPlaylistFollow').click(function(){
  $(".bigPlaylistFollow").css("display", "none");
  $(".bigPlaylistUnfollow").css("display", "block");
});

$('.bigPlaylistUnfollow').click(function(){
  $(".bigPlaylistUnfollow").css("display", "none");
  $(".bigPlaylistFollow").css("display", "block");
});

</script>