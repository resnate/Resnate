function getFrameID(id){
    var elem = document.getElementById(id);
    if (elem) {
        if(/^iframe$/i.test(elem.tagName)) return id; //Frame, OK
        // else: Look for frame
        var elems = elem.getElementsByTagName("iframe");
        if (!elems.length) return null; //No iframe found, FAILURE
        for (var i=0; i<elems.length; i++) {
           if (/^https?:\/\/(?:www\.)?youtube(?:-nocookie)?\.com(\/|$)/i.test(elems[i].src)) break;
        }
        elem = elems[i]; //The only, or the best iFrame
        if (elem.id) return elem.id; //Existing ID, return it
        // else: Create a new ID
        do { //Keep postfixing `-frame` until the ID is unique
            id += "-frame";
        } while (document.getElementById(id));
        elem.id = id;
        return id;
    }
    // If no element, return null.
    return null;
}

// Define YT_ready function.
var YT_ready = (function() {
    var onReady_funcs = [], api_isReady = false;
    /* @param func function     Function to execute on ready
     * @param func Boolean      If true, all qeued functions are executed
     * @param b_before Boolean  If true, the func will added to the first
                                 position in the queue*/
    return function(func, b_before) {
        if (func === true) {
            api_isReady = true;
            while (onReady_funcs.length) {
                // Removes the first func from the array, and execute func
                onReady_funcs.shift()();
            }
        } else if (typeof func == "function") {
            if (api_isReady) func();
            else onReady_funcs[b_before?"unshift":"push"](func); 
        }
    }
})();
// This function will be called when the API is fully loaded
function onYouTubeIframeAPIReady() {YT_ready(true)}

// Load YouTube Frame API
(function() { // Closure, to not leak to the scope
  var s = document.createElement("script");
  s.src = (location.protocol == 'https:' ? 'https' : 'http') + "://www.youtube.com/iframe_api";
  var before = document.getElementsByTagName("script")[0];
  before.parentNode.insertBefore(s, before);
})();
var player; 
YT_ready(function(){
    var frameID = getFrameID("player");
    if (frameID) { //If the frame exists
        player = new YT.Player(frameID, {
            events: {
              'onReady': onPlayerReady,
              'onStateChange': stopCycle
            }
        });


        
    }
});

 var playerReady = false;
        function onPlayerReady(event) {
            playerReady = true;
            var $ = document.querySelector.bind(document);
            iframe = $('#player');
            $('.glyphicon-fullscreen').addEventListener('click', playFullscreen);
            function playFullscreen() {
  var requestFullScreen = iframe.requestFullScreen || iframe.mozRequestFullScreen || iframe.webkitRequestFullScreen;
  if (requestFullScreen) {
    requestFullScreen.bind(iframe)();
  }
  
}

        }


        function toHHMMSS(unformat){
          var sec_num = unformat;

          if(sec_num / 3600 <= 1) {
            var minutes = Math.floor(sec_num / 60);
    var seconds = Math.round(sec_num - (minutes * 60));

    if (minutes < 10) {minutes = "0"+minutes;}
    if (seconds < 10) {seconds = "0"+seconds;}
    var time    = minutes+':'+seconds;
  } else {
          var hours   = Math.floor(sec_num / 3600);
    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
    var seconds = Math.round(sec_num - (hours * 3600) - (minutes * 60));

    if (hours   < 10) {hours   = "0"+hours;}
    if (minutes < 10) {minutes = "0"+minutes;}
    if (seconds < 10) {seconds = "0"+seconds;}
    var time    = hours+':'+minutes+':'+seconds;
  }
    return time;

        }

function stopCycle(event) {

  duration = player.getDuration();
  $('#duration').html(toHHMMSS(duration));
        totalBytes = player.getVideoBytesTotal();

        $("#slider").slider({
        range: "max",
        min: 0,
        max: duration,
        value: 1,
        slide: function( event, ui ) {player.seekTo(ui.value);}
    });

        function loop() {
        var time = player.getCurrentTime(),
            // make loaded a percentage
            loaded = 100 - (player.getVideoBytesLoaded() / totalBytes) * 100;
$('#currentTime').html(toHHMMSS(time));
        // set limit - no one likes negative widths
        if (loaded < 0) { loaded = 0; }

        // update time on slider
        $('#slider')
            .slider('option', 'value', time)
            .find('.ui-widget-header').css('width', loaded + '%');

        // repeat loop as needed
        if (loaded < 0 || time < duration) {
            setTimeout(loop, 500);
        }
    }
    loop(); 


          if (event.data == YT.PlayerState.ENDED) {
               var url = event.target.getVideoUrl();
               var match = url.match(/[?&]v=([^&]+)/);
               var videoId = match[1];
               $('#stopID').html(videoId);
               
                if($('#stopID').html() == videoID){
                  var thisVideo = $('#Playlist').find('li img[src="https://img.youtube.com/vi/'+videoID+'/default.jpg"]');
                  nextVideo = $(thisVideo).parent().next().find('.playlistYT');
                  nextVideo.click();
                }
               

          }

          else if (event.data == YT.PlayerState.PAUSED) {
            
            $('.glyphicon-pause').parent().css('display', 'none');
            $('.glyphicon-play').parent().css('display', 'inline-block');
          }

          else if (event.data == YT.PlayerState.PLAYING) {
            
            $('.glyphicon-play').parent().css('display', 'none');
            $('.glyphicon-pause').parent().css('display', 'inline-block');
          }
      }

function ytSearch()
        {
            var userSearch = document.getElementById('search_query').value;
            var script = document.createElement('script');
            script.setAttribute('id', 'jsonScript');
            script.setAttribute('type', 'text/javascript');
            script.setAttribute('src', 'https://gdata.youtube.com/feeds/api/videos?category=Music&q='
              + userSearch + '&type=video&max-results=50&' + 
                   'alt=json-in-script&callback=showMyVideos&' + 
                   'orderby=relevance&sortorder=descending&format=5');
            
            document.documentElement.firstChild.appendChild(script);

            $('#videoResultsDiv').on('scroll', function(){
              if($(this).scrollTop() + $(this).innerHeight() >= this.scrollHeight) {
                var userSearch = document.getElementById('search_query').value;
            var script = document.createElement('script');
            script.setAttribute('id', 'jsonScript');
            script.setAttribute('type', 'text/javascript');
                script.setAttribute('src', 'https://gdata.youtube.com/feeds/api/videos?category=Music&q='
              + userSearch + '&type=video&start-index='+$('.startIndex:last').html() +'&max-results=50&' + 
                   'alt=json-in-script&callback=appendVideos&' + 
                   'orderby=relevance&sortorder=descending&format=5');
            
            document.documentElement.firstChild.appendChild(script);
              }
              
            });
        }

        

            



function abracadabra() {
    
    $('#searchPlaceholder').fadeOut();
    $("#YTtest, #searchNsee, #iframeAmazon").fadeIn().css("display","inline-block");
    
}



$(function(){

  $('#Welcome').hide().fadeIn(3000);

  $('#Playlist').on('click', '.glyphicon-remove', function(){
    var updatePlaylistURL = '/playlists/' + $(this).parents('.dropdownPlaylistDiv').siblings('.hiddenPlaylistID').html();
    var playlistContent = [];
      $(this).parents('.dropdownPlaylist').children('li').not($(this).parent()).each(function(){
        name = $(this).find('p').text().trim();
        value = $(this).find('img').attr('src').slice(27,-12);
        var playlistObject = {};
        playlistObject[name] = value;
        playlistContent.push(playlistObject);
      });
    $.ajax({
   url: updatePlaylistURL ,
   type: 'PUT',
   data: {content: JSON.stringify(playlistContent)},
   success: function(response) {
     //...
   }
});
    $(this).parent().remove();
  });

  
    




});